@using Microsoft.AspNetCore.Authentication
@using BlazorApp.Services
@inject TokenProvider TokenProvider
@inject ILogger<App> Logger
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="BlazorApp.styles.css" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet />
</head>

<body>
    <Routes />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
</body>

</html>

@code {

    [CascadingParameter]
    public HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        TokenProvider.AccessToken = await HttpContext.GetTokenAsync("access_token");
        TokenProvider.RefreshToken = await HttpContext.GetTokenAsync("refresh_token");
        Logger.LogInformation("Token set in provider: {AccessToken}", TokenProvider.AccessToken);
    }

}
